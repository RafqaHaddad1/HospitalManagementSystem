<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Schedules</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/2.1.6/css/dataTables.dataTables.css" />
    <script src="https://cdn.datatables.net/2.1.6/js/dataTables.js"></script>
    <link href="https://stackpath.bootstrapcdn.cm/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .save-button {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #44444c;
            margin-bottom: 20px;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .fc-toolbar .fc-button {
            background-color: #44444c !important;
            color: white !important;
            border: none !important;
            padding: 8px 20px !important;
            font-size: 16px !important;
            cursor: pointer !important;
        }

            .fc-toolbar .fc-button:hover {
                background-color: #33333a !important;
            }

            .fc-toolbar .fc-button:active {
                background-color: #2a2a30 !important;
            }

     
        .fc {
            z-index: 1;
        }

        .fc-col-header-cell a {
            color: inherit !important;
            text-decoration: none !important;
        }

        .fc-daygrid-day-number {
            color: inherit !important;
            font-weight: normal !important;
            text-decoration: none !important;
        }

        .select2-hidden-accessible {
            border: 0 !important;
            clip: rect(0 0 0 0) !important;
            height: 1px !important;
            margin: -1px !important;
            overflow: hidden !important;
            padding: 0 !important;
            position: absolute !important;
            width: 1px !important
        }

        .select2-container--default .select2-selection--single,
        .select2-selection .select2-selection--single {
            border: 1px solid #d2d6de;
            border-radius: 5px;
            padding: 6px 12px;
            height: 34px;
            margin-bottom: 10px
        }

        .select2-container--default .select2-selection--single {
            background-color: #fff;
            border: 1px solid #aaa;
            border-radius: 5px
        }

        .select2-container .select2-selection--single {
            box-sizing: border-box;
            cursor: pointer;
            display: block;
            height: 28px;
            user-select: none;
            -webkit-user-select: none
        }

            .select2-container .select2-selection--single .select2-selection__rendered {
                padding-right: 10px
            }

            .select2-container .select2-selection--single .select2-selection__rendered {
                padding-left: 0;
                padding-right: 0;
                height: auto;
                margin-top: -3px
            }

        .select2-container--default .select2-selection--single .select2-selection__rendered {
            line-height: 28px
        }

        .select2-container--default .select2-selection--single,
        .select2-selection .select2-selection--single {
            border: 1px solid #d2d6de;
            border-radius: 5px !important;
            padding: 6px 12px;
            height: 40px !important
        }

            .select2-container--default .select2-selection--single .select2-selection__arrow {
                height: 26px;
                position: absolute;
                top: 6px !important;
                right: 1px;
                width: 20px
            }

        .select2-container--default .select2-results__option {
            padding: 8px 12px;
            font-size: 14px;
            border-bottom: 1px solid #ddd;
            border-radius: 5px;
        }

        .select2-container--default .select2-results__option--highlighted {
            background-color: #44444c !important;
            color: white !important;
        }
        /* Style the search box container */
        .select2-container--default .select2-search--dropdown .select2-search__field {
            padding: 8px;
            border: 1px solid #d2d6de;
            border-radius: 5px;
            box-sizing: border-box;
            font-size: 14px;
        }

            /* Style the search box input */
            .select2-container--default .select2-search--dropdown .select2-search__field:focus {
                border-color: #44444c;
                outline: none;
                box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);
                border-radius: 5px;
            }

        .select2-container--default .select2-dropdown {
            border: 1px solid #d2d6de;
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            background-color: #fff;
            max-height: 200px; /* Adjust as needed */
            overflow-y: auto; /* Enable scrolling if options overflow */
        }

    </style>


</head>
<body>
    <select name="department" id="department" class="department form-control select2-hidden-accessible" data-placeholder="Select a Department" style="width: 100%;" tabindex="-1" aria-hidden="true" onchange="updateDepartmentID()">
        <option value="" selected disabled>Select a Department</option>

    </select>
    <input type="number" name="DepartmentID" id="DepartmentID" hidden />
    <select name="role" id="role" class="role form-control select2-hidden-accessible" data-placeholder="Select a Role" style="width: 100%;" tabindex="-1" aria-hidden="true" onchange="updateRole()">
        <option value="" selected disabled>Select a role</option>
        <option value="Doctor">Doctor</option>
        <option value="Nurse">Nurse</option>
        <option value="Lab">Lab</option>
        <option value="Radiology">Radiology</option>
    </select>
    <input type="text" name="roleName" id="roleName" hidden />
    <button type="button" id="FetchEvents" class="save-button">Fetch Events</button>
    <div id="calendar"></div>

    <!-- Add Event Modal -->
    <div class="modal fade"
         id="AddEventModal"
         tabindex="-1"
         role="dialog"
         aria-labelledby="AddEventModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="AddEventModalLabel">Add Event</h5>
                    <button type="button"
                            class="close"
                            data-dismiss="modal"
                            aria-label="Close" onclick=" $('#AddEventModal').modal('hide');">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="AddEventForm">
                        <!-- Department ID -->
                        <div class="form-group">
                            <label for="Department">Department</label><br/>
                            <select class="form-control select2-hidden-accessible" id="Department2" name="Department" onchange="updateDepartmentID2()" style="width: 100%;">
                                <option value="" disabled selected>Select Department</option>
                           
                            </select>
                            <input type="number" name="DepartmentID" id="DepartmentID2" hidden />
                        </div>
                        <div class="form-group">
                            <label for="Role">Role</label><br />
                            <select name="role" id="Role2" class="role form-control select2-hidden-accessible" data-placeholder="Select a Role" onchange="changeRole()" style="width: 100%;">
                                <option value="" selected disabled>Select a role</option>
                                <option value="Doctor">Doctor</option>
                                <option value="Nurse">Nurse</option>
                                <option value="Lab">Lab</option>
                                <option value="Radiology">Radiology</option>
                            </select>
                            <input type="text" name="Role" id="roleName2" hidden />
                        </div>
                        <!-- Staff ID -->
                        <div class="form-group">
                            <label for="Staff">Staff</label><br />
                            <select class="form-control select2-hidden-accessible" id="Staff" name="Staff" onchange="updateStaffID()" style="width: 100%;">
                                <option value="" disabled selected>Select Staff</option>
                            </select>
                            <input type="number" name="StaffID" id="StaffID" hidden />
                        </div>

                        <!-- Event Title -->
                     @*    <div class="form-group">
                            <label for="EventTitle">Event Title</label>
                            <input type="text"
                                   class="form-control"
                                   id="EventTitle"
                                   name="EventTitle"
                                   placeholder="Enter event title"
                                   required />
                        </div> *@

                        <!-- Date -->
                        <div class="form-group">
                            <label for="EventDate">Date</label>
                            <input type="date"
                                   class="form-control"
                                   id="EventDate"
                                   name="Date"
                                    />
                        </div>

                        <!-- Start Time -->
                        <div class="form-group">
                            <label for="EventStartTime">Start Time</label>
                            <input type="time"
                                   class="form-control"
                                   id="EventStartTime"
                                   name="Start"
                                    />
                        </div>

                        <!-- End Time -->
                        <div class="form-group">
                            <label for="EventEndTime">End Time</label>
                            <input type="time"
                                   class="form-control"
                                   id="EventEndTime"
                                   name="End"
                                    />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="submit"
                            class="btn"
                            id="saveEventButton"
                            style="
                  background-color: #44444c;
                  color: white;
                  border: none;
                  padding: 8px 20px;
                ">
                        Save Event
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade"
         id="ViewEventModal"
         tabindex="-1"
         role="dialog"
         aria-labelledby="AddEventModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="AddEventModalLabel">Add Event</h5>
                    <button type="button"
                            class="close"
                            data-dismiss="modal"
                            aria-label="Close" onclick=" $('#ViewEventModal').modal('hide');">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="UpdateEventForm">
                        <!-- Department ID -->
                        <label for="EventID">Event ID</label>
                        <input type="number" name="EventID" id="EventID2" class="form-control" readonly />
                        <div class="form-group">
                            <label for="Department">Department</label><br />
                           
                            <input type="number" name="DepartmentID" id="DepartmentID3" class="form-control" readonly />
                        </div>
                        <div class="form-group">
                            <label for="Role">Role</label><br />
                           
                            <input type="text" name="Role" id="roleName3" class="form-control" readonly />
                        </div>
                        <!-- Staff ID -->
                        <div class="form-group">
                            <label for="StaffName">Staff Name</label><br />
                            <input type="text" name="StaffName" id="StaffName" class="form-control" readonly />
                            <label for="StaffID">Staff ID</label><br />
                            <input type="number" name="StaffID" id="StaffID2" class="form-control"  readonly />
                        </div>

                        <!-- Date -->
                        <div class="form-group">
                            <label for="EventDate">Date</label>
                            <input type="date"
                                   class="form-control"
                                   id="EventDate2"
                                   name="Date" />
                        </div>

                        <!-- Start Time -->
                        <div class="form-group">
                            <label for="EventStartTime">Start Time</label>
                            <input type="time"
                                   class="form-control"
                                   id="EventStartTime2"
                                   name="Start" />
                        </div>

                        <!-- End Time -->
                        <div class="form-group">
                            <label for="EventEndTime">End Time</label>
                            <input type="time"
                                   class="form-control"
                                   id="EventEndTime2"
                                   name="End" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="submit"
                            class="btn"
                            id="UpdateEvent"
                            style="
                  background-color: #44444c;
                  color: white;
                  border: none;
                  padding: 8px 20px;
                ">
                        Update Event
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        var accessToken = localStorage.getItem("accessToken");
        $("#Department2").select2({
            dropdownParent: $('#AddEventModal')
        });
        $("#Role2").select2({
            dropdownParent: $('#AddEventModal')

        });
        $("#Staff").select2({
            dropdownParent: $('#AddEventModal')
        });
        $("#department").select2();
        $("#role").select2();
        $(document).ready(function () {
            // Initialize department dropdown before calendar
            DepartmentDropDown();

            // Ensure the calendar element is loaded before initialization
            var calendarEl = document.getElementById("calendar");

            if (calendarEl) {
                var calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: "dayGridMonth",
                    headerToolbar: {
                        left: "prev,next today",
                        center: "title",
                        right: "addEventButton dayGridMonth,timeGridWeek,timeGridDay",
                    },
                    customButtons: {
                        addEventButton: {
                            text: "Add Event",
                            click: function () {
                                DepartmentDropDown2();
                                $("#AddEventModal").modal("show");
                            },
                        },
                    },
                    dateClick: function (info) {
                        calendar.changeView('timeGridDay', info.dateStr);
                    },

                    events: [], // You might want to populate events here or via another AJAX call

                    eventClick: function (info) {
                        console.log(info);  // Log the FullCalendar event data
                        console.log(info.event._def.publicId);

                        // Make AJAX request to fetch event details based on the event ID
                        $.ajax({
                            url: '/Schedule/GetEventById',  // The URL of your API
                            type: 'GET',
                            headers: {
                                'Authorization': 'Bearer ' + accessToken,

                            },
                            data: { id: info.event._def.publicId },  // Pass event ID to the API
                            success: function (response) {
                                if (response.success) {
                                    const event = response.model;   // The event data returned from the API
                                    console.log(event);
                                    // Populate the modal with event data
                                    $('#ViewEventModal #EventID2').val(event.id);
                                    $('#ViewEventModal #DepartmentID3').val(event.departmentID);
                                    $('#ViewEventModal #roleName3').val(event.departmentName);
                                    $('#ViewEventModal #StaffName').val(event.title);
                                    $('#ViewEventModal #StaffID2').val(event.staffID);
                                    $('#ViewEventModal #EventDate2').val(event.date);
                                    $('#ViewEventModal #EventStartTime2').val(event.start);
                                    $('#ViewEventModal #EventEndTime2').val(event.end);

                                    // Show the modal
                                    $("#ViewEventModal").modal('show');
                                } else {
                                    alert('Error: ' + response.error);
                                }
                            },
                            error: function () {
                                alert('An error occurred while fetching event details.');
                            }
                        });
                    }
                });

                // Render the calendar
                calendar.render();
            } else {
                console.error("Calendar element not found");
            }

            // Fetch events on button click
            $("#FetchEvents").click(function () {
                var departmentID = $("#DepartmentID").val();
                var role = $("#roleName").val();
                $.ajax({
                    url: '/Schedule/GetEventByDepAndRole',
                    method: 'GET',
                    headers: {
                        'Authorization': 'Bearer ' + accessToken,

                    },
                    data: {
                        depId: departmentID,
                        role: role
                    },
                    success: function (data) {
                        console.log(data); // Debugging step
                        calendar.getEventSources().forEach(function (source) {
                            source.remove();
                        });
                        var events = data.model.map(function (event) {
                            // Format the start and end date-time
                            var date = event.date;
                            event.start = `${date}T${event.start}`;
                            event.end = `${date}T${event.end}`;
                            return event;
                        });

                        // Add the events to the calendar
                        calendar.addEventSource(events);
                    },
                    error: function () {
                        alert("An error occurred while fetching events.");
                    }
                });
            });
        });
          
        $('#saveEventButton').click(function () {
            const formData = {
                Role: $('#AddEventModal #roleName2').val(),
                Date: $('#AddEventModal #EventDate').val(), // Event date
                Start: $('#AddEventModal #EventStartTime').val(), // Event start time
                End: $('#AddEventModal #EventEndTime').val(), // Event end time
                StaffID: $('#AddEventModal #StaffID').val(), // Staff ID
                DepartmentID: $('#AddEventModal #DepartmentID2').val() // Department ID
            };

            // Log the form data to check if the values are correct
            console.log('FormData:', formData);

            // Validate if all required fields are filled
            if (formData.Date && formData.Start && formData.End) {
                $.ajax({
                    url: '/Schedule/AddEvent', // Update with your correct endpoint if needed
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + accessToken,

                    },
                    data: formData, // Convert formData to JSON string
                    success: function (response) {
                        console.log('Server Response:', response);
                        if (response.success) {
                            alert("Event Added");
                            $('#AddEventModal').modal('hide'); // Hide the modal
                             // Refresh the calendar to show the new event
                        } else {
                            alert('Error: you are not allowed to perform this action'); // Handle errors from the server
                        }
                    },
                    error: function (error) {
                        console.log('AJAX Error:', error); // Log any AJAX errors
                        alert('Error adding event.'); // Show a user-friendly error message
                    }
                });
            } else {
                alert("Please fill all required fields!"); // Alert if any required fields are missing
            }
        });

        $('#UpdateEvent').click(function () {
            const formData = {
                EventID: $('#ViewEventModal #EventID2').val(),
                Role: $('#ViewEventModal #roleName3').val(),
                Date: $('#ViewEventModal #EventDate2').val(), // Event date
                Start: $('#ViewEventModal #EventStartTime2').val(), // Event start time
                End: $('#ViewEventModal #EventEndTime2').val(), // Event end time
                StaffID: $('#ViewEventModal #StaffID2').val(), // Staff ID
                DepartmentID: $('#ViewEventModal #DepartmentID3').val() // Department ID
            };

            // Log the form data to check if the values are correct
            console.log('FormData:', formData);

            // Validate if all required fields are filled
            if (formData.Date && formData.Start && formData.End) {
                $.ajax({
                    url: '/Schedule/UpdateEvent', // Update with your correct endpoint if needed
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + accessToken,

                    },
                    data: formData, // Convert formData to JSON string
                    success: function (response) {
                        console.log('Server Response:', response);
                        if (response.success) {
                            alert("Event Updated");
                            $('#ViewEventModal').modal('hide'); // Hide the modal
                           
                        } else {
                            alert('Error: you are not allowed to perform this action'); // Handle errors from the server
                        }
                    },
                    error: function (error) {
                        console.log('AJAX Error:', error); // Log any AJAX errors
                        alert('Error adding event.'); // Show a user-friendly error message
                    }
                });
            } else {
                alert("Please fill all required fields!"); // Alert if any required fields are missing
            }
        });

    
        function DepartmentDropDown() {
            $.ajax({
                url: '/Department/AllDepartments',
                type: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + accessToken,

                },
                success: function (response) {
                    console.log(response); // Log the response object

                    if (response.success) {
                        var DepartmentDropDown = document.getElementById("department");
                        DepartmentDropDown.innerHTML = ""; // Clear existing options
                        // Add a default "Select a Supervisor" option
                        var defaultOption = document.createElement("option");
                        defaultOption.value = "";
                        defaultOption.text = "Select a Department";
                        defaultOption.disabled = true;
                        defaultOption.selected = true;
                        DepartmentDropDown.appendChild(defaultOption);
                        // Populate the zone dropdown with new options
                        response.model.forEach(function (department) {
                            var option = document.createElement("option");
                            option.value = department.departmentName;
                            option.text = department.departmentName;
                            option.setAttribute("data-department-id", department.departmentID);
                            console.log("Department ID: ", department.departmentID);
                            DepartmentDropDown.appendChild(option);
                        });


                    } else {
                        alert('Failed to retrieve department: ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + error);
                }
            });
        }

        function updateDepartmentID() {
            var selectedOption = document.getElementById("department").selectedOptions[0];
            // Get the Zone_ID from the data attribute
            var departmentID = selectedOption.getAttribute("data-department-id"); // Fix the attribute name
            // Set the Zone_ID input field value
            document.getElementById("DepartmentID").value = departmentID;
        }
        function updateRole() {
            var selectedOption = document.getElementById("role").selectedOptions[0];

            // Get the value of the selected option
            var roleValue = selectedOption.value;  // or use selectedOption.text for the visible text

            // Set the value in the input field
            document.getElementById("roleName").value = roleValue;
        }


        function DepartmentDropDown2() {
            $.ajax({
                url: '/Department/AllDepartments',
                type: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + accessToken,

                },
                success: function (response) {
                    console.log(response); // Log the response object

                    if (response.success) {
                        var DepartmentDropDown = document.getElementById("Department2");
                        DepartmentDropDown.innerHTML = ""; // Clear existing options
                        // Add a default "Select a Supervisor" option
                        var defaultOption = document.createElement("option");
                        defaultOption.value = "";
                        defaultOption.text = "Select a Department";
                        defaultOption.disabled = true;
                        defaultOption.selected = true;
                        DepartmentDropDown.appendChild(defaultOption);
                        // Populate the zone dropdown with new options
                        response.model.forEach(function (department) {
                            var option = document.createElement("option");
                            option.value = department.departmentName;
                            option.text = department.departmentName;
                            option.setAttribute("data-department-id", department.departmentID);
                            console.log("Department ID: ", department.departmentID);
                            DepartmentDropDown.appendChild(option);
                        });


                    } else {
                        alert('Failed to retrieve department: ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + error);
                }
            });
        }

        function updateDepartmentID2() {
            var selectedOption = document.getElementById("Department2").selectedOptions[0];
            // Get the Zone_ID from the data attribute
            var departmentID = selectedOption.getAttribute("data-department-id"); // Fix the attribute name
            // Set the Zone_ID input field value
            document.getElementById("DepartmentID2").value = departmentID;
        }

        function updateRole2() {
            var selectedOption = document.getElementById("Role2").selectedOptions[0]; // Get the selected option

            // Check if an option is selected and update the role name input
            if (selectedOption) {
                var roleValue = selectedOption.value; // Get the value of the selected option
                console.log(roleValue);
                document.getElementById("roleName2").value = roleValue;
                console.log($("#roleName").val());// Set the value in the roleName input field
            }
        }
        function changeRole() {
            // First, update the role name using the selected option
            updateRole2();

            // Now get the updated role value
            var rolevalue = $("#roleName2").val();
            var department = $("#DepartmentID2").val();
            // Perform an AJAX request to fetch staff based on the selected role
            $.ajax({
                url: '/Staff/StaffByRole', // Ensure this is the correct endpoint
                type: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + accessToken,

                },
                data: {
                    role: rolevalue,
                    department: department
                },
                success: function (response) {
                    console.log(response); // Log the response object for debugging

                    if (response.success) {
                        var staffDropDown = document.getElementById("Staff");
                        staffDropDown.innerHTML = ""; // Clear existing options

                        // Add a default "Select a Staff" option
                        var defaultOption = document.createElement("option");
                        defaultOption.value = "";
                        defaultOption.text = "Select a Staff";
                        defaultOption.disabled = true;
                        defaultOption.selected = true;
                        staffDropDown.appendChild(defaultOption);

                        // Populate the staff dropdown with new options
                        response.model.staff.forEach(function (staff) {
                            var option = document.createElement("option");
                            option.value = staff.staffID;
                            option.text = staff.name;
                            option.setAttribute("data-staff-id", staff.staffID);
                            console.log("Staff ID: ", staff.staffID); // For debugging
                            staffDropDown.appendChild(option);
                        });
                    } else {
                        alert('Failed to retrieve staff: ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('AJAX Error: ', error); // Log error for debugging
                    alert('Error fetching staff based on the selected role.');
                }
            });
        }
        function updateStaffID() {
            var selectedOption = document.getElementById("Staff").selectedOptions[0];
            // Get the Zone_ID from the data attribute
            var departmentID = selectedOption.getAttribute("data-staff-id"); // Fix the attribute name
            // Set the Zone_ID input field value
            document.getElementById("StaffID").value = departmentID;
        }
           
    </script>

</body>
</html>
