<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Schedules</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/2.1.6/css/dataTables.dataTables.css" />
    <script src="https://cdn.datatables.net/2.1.6/js/dataTables.js"></script>
    <link href="https://stackpath.bootstrapcdn.cm/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>


        .fc-toolbar .fc-button {
            background-color: #44444c !important;
            color: white !important;
            border: none !important;
            padding: 8px 20px !important;
            font-size: 16px !important;
            cursor: pointer !important;
        }

            .fc-toolbar .fc-button:hover {
                background-color: #33333a !important;
            }

            .fc-toolbar .fc-button:active {
                background-color: #2a2a30 !important;
            }

     
        .fc {
            z-index: 1;
        }

        .fc-col-header-cell a {
            color: inherit !important;
            text-decoration: none !important;
        }

        .fc-daygrid-day-number {
            color: inherit !important;
            font-weight: normal !important;
            text-decoration: none !important;
        }

        .select2-hidden-accessible {
            border: 0 !important;
            clip: rect(0 0 0 0) !important;
            height: 1px !important;
            margin: -1px !important;
            overflow: hidden !important;
            padding: 0 !important;
            position: absolute !important;
            width: 1px !important
        }

        .select2-container--default .select2-selection--single,
        .select2-selection .select2-selection--single {
            border: 1px solid #d2d6de;
            border-radius: 5px;
            padding: 6px 12px;
            height: 34px;
            margin-bottom: 10px
        }

        .select2-container--default .select2-selection--single {
            background-color: #fff;
            border: 1px solid #aaa;
            border-radius: 5px
        }

        .select2-container .select2-selection--single {
            box-sizing: border-box;
            cursor: pointer;
            display: block;
            height: 28px;
            user-select: none;
            -webkit-user-select: none
        }

            .select2-container .select2-selection--single .select2-selection__rendered {
                padding-right: 10px
            }

            .select2-container .select2-selection--single .select2-selection__rendered {
                padding-left: 0;
                padding-right: 0;
                height: auto;
                margin-top: -3px
            }

        .select2-container--default .select2-selection--single .select2-selection__rendered {
            line-height: 28px
        }

        .select2-container--default .select2-selection--single,
        .select2-selection .select2-selection--single {
            border: 1px solid #d2d6de;
            border-radius: 5px !important;
            padding: 6px 12px;
            height: 40px !important
        }

            .select2-container--default .select2-selection--single .select2-selection__arrow {
                height: 26px;
                position: absolute;
                top: 6px !important;
                right: 1px;
                width: 20px
            }

        .select2-container--default .select2-results__option {
            padding: 8px 12px;
            font-size: 14px;
            border-bottom: 1px solid #ddd;
            border-radius: 5px;
        }

        .select2-container--default .select2-results__option--highlighted {
            background-color: #44444c !important;
            color: white !important;
        }
        /* Style the search box container */
        .select2-container--default .select2-search--dropdown .select2-search__field {
            padding: 8px;
            border: 1px solid #d2d6de;
            border-radius: 5px;
            box-sizing: border-box;
            font-size: 14px;
        }

            /* Style the search box input */
            .select2-container--default .select2-search--dropdown .select2-search__field:focus {
                border-color: #44444c;
                outline: none;
                box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);
                border-radius: 5px;
            }

        .select2-container--default .select2-dropdown {
            border: 1px solid #d2d6de;
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            background-color: #fff;
            max-height: 200px; /* Adjust as needed */
            overflow-y: auto; /* Enable scrolling if options overflow */
        }

    </style>


</head>
<body>
    <select name="department" id="department" class="department form-control select2-hidden-accessible" data-placeholder="Select a Department" style="width: 100%;" tabindex="-1" aria-hidden="true" onchange="updateDepartmentID()">
        <option value="" selected disabled>Select a Department</option>

    </select>
    <input type="number" name="DepartmentID" id="DepartmentID" hidden />
    <select name="role" id="role" class="role form-control select2-hidden-accessible" data-placeholder="Select a Role" style="width: 100%;" tabindex="-1" aria-hidden="true" onchange="updateRole()">
        <option value="" selected disabled>Select a role</option>
        <option value="Doctor">Doctor</option>
        <option value="Nurse">Nurse</option>
        <option value="Lab">Lab</option>
        <option value="Radiology">Radiology</option>
    </select>
    <input type="text" name="roleName" id="roleName" hidden />
    <div id="calendar"></div>

    <!-- Add Event Modal -->
    <div class="modal fade"
         id="AddEventModal"
         tabindex="-1"
         role="dialog"
         aria-labelledby="AddEventModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="AddEventModalLabel">Add Event</h5>
                    <button type="button"
                            class="close"
                            data-dismiss="modal"
                            aria-label="Close" onclick=" $('#AddEventModal').modal('hide');">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="AddEventForm">
                        <!-- Department ID -->
                        <div class="form-group">
                            <label for="Department">Department</label><br/>
                            <select class="form-control" id="Department2" name="Department" required onchange="updateDepartmentID2">
                                <option value="" disabled selected>Select Department</option>
                           
                            </select>
                            <input type="number" name="DepartmentID" id="DepartmentID2" hidden />
                        </div>
                        <div class="form-group">
                            <label for="Role">Role</label><br />
                            <select name="role" id="Role2" class="role form-control" data-placeholder="Select a Role" onchange="changeRole()">
                                <option value="" selected disabled>Select a role</option>
                                <option value="Doctor">Doctor</option>
                                <option value="Nurse">Nurse</option>
                                <option value="Lab">Lab</option>
                                <option value="Radiology">Radiology</option>
                            </select>
                            <input type="text" name="Role" id="roleName" hidden />
                        </div>
                        <!-- Staff ID -->
                        <div class="form-group">
                            <label for="Staff">Staff</label><br />
                            <select class="form-control" id="Staff" name="Staff" required>
                                <option value="" disabled selected>Select Staff</option>
                            </select>
                            <input type="number" name="StaffID" hidden />
                        </div>

                        <!-- Event Title -->
                        <div class="form-group">
                            <label for="EventTitle">Event Title</label>
                            <input type="text"
                                   class="form-control"
                                   id="EventTitle"
                                   name="EventTitle"
                                   placeholder="Enter event title"
                                   required />
                        </div>

                        <!-- Date -->
                        <div class="form-group">
                            <label for="EventDate">Date</label>
                            <input type="date"
                                   class="form-control"
                                   id="EventDate"
                                   name="EventDate"
                                   required />
                        </div>

                        <!-- Start Time -->
                        <div class="form-group">
                            <label for="EventStartTime">Start Time</label>
                            <input type="time"
                                   class="form-control"
                                   id="EventStartTime"
                                   name="EventStartTime"
                                   required />
                        </div>

                        <!-- End Time -->
                        <div class="form-group">
                            <label for="EventEndTime">End Time</label>
                            <input type="time"
                                   class="form-control"
                                   id="EventEndTime"
                                   name="EventEndTime"
                                   required />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn"
                            id="saveEventButton"
                            style="
                  background-color: #44444c;
                  color: white;
                  border: none;
                  padding: 8px 20px;
                ">
                        Save Event
                    </button>
                </div>
            </div>
        </div>
    </div>



    <script>
        $("#Department2").select2({
            dropdownParent: $('#AddEventModal')
        });
        $("#Role2").select2({
            dropdownParent: $('#AddEventModal')

        });
        $("#Staff").select2({
            dropdownParent: $('#AddEventModal')
        });
        $("#department").select2();
        $("#role").select2();
        $(document).ready(function () {
            DepartmentDropDown();
            var calendarEl = document.getElementById("calendar");
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: "dayGridMonth",
                headerToolbar: {
                    left: "prev,next today",
                    center: "title",
                    right: "addEventButton dayGridMonth,timeGridWeek,timeGridDay",
                },
                customButtons: {
                    addEventButton: {
                        text: "Add Event",
                        click: function () {
                            DepartmentDropDown2();
                            $("#AddEventModal").modal("show");
                        },
                    },
                },
                eventDisplay: "block",
                events: [],
                eventClick: function (info) {
                    // Show the modal with event details in read-only mode
                    $("#EventTitle").val(info.event.title).prop("disabled", true);
                    $("#EventDate").val(info.event.start.toISOString().slice(0, 10)).prop("disabled", true);
                    $("#EventStartTime")
                        .val(info.event.start.toISOString().slice(11, 16))
                        .prop("disabled", true);
                    $("#EventEndTime")
                        .val(info.event.end ? info.event.end.toISOString().slice(11, 16) : "")
                        .prop("disabled", true);

                    // Populate additional fields if necessary
                    const [staffInfo, deptInfo] = info.event.title.match(/\((.*?)\)/)[1].split(", ");
                    $("#StaffID").val(staffInfo.split(": ")[1]).prop("disabled", true);
                    $("#DepartmentID").val(deptInfo.split(": ")[1]).prop("disabled", true);


                    $("#saveEventButton").hide();


                    $("#AddEventModal").modal("show");
                },
            });

            calendar.render();

            $("#saveEventButton").on("click", function () {
                var title = $("#EventTitle").val();
                var date = $("#EventDate").val();
                var startTime = $("#EventStartTime").val();
                var endTime = $("#EventEndTime").val();
                var staffId = $("#StaffID").val();
                var departmentId = $("#DepartmentID").val();

                if (title && date && startTime && endTime) {
                    calendar.addEvent({
                        title: title + " (Staff Id: " + staffId + ", Dept Id: " + departmentId + ")",
                        start: date + "T" + startTime,
                        end: date + "T" + endTime,
                        allDay: false,
                    });

                    alert("Event added successfully!");
                    $("#AddEventModal").modal("hide");
                    $("#AddEventForm")[0].reset();
                } else {
                    alert("Please fill all required fields!");
                }
            });
        });
        function DepartmentDropDown() {
            $.ajax({
                url: '/Department/AllDepartments',
                type: 'GET',
                success: function (response) {
                    console.log(response); // Log the response object

                    if (response.success) {
                        var DepartmentDropDown = document.getElementById("department");
                        DepartmentDropDown.innerHTML = ""; // Clear existing options
                        // Add a default "Select a Supervisor" option
                        var defaultOption = document.createElement("option");
                        defaultOption.value = "";
                        defaultOption.text = "Select a Department";
                        defaultOption.disabled = true;
                        defaultOption.selected = true;
                        DepartmentDropDown.appendChild(defaultOption);
                        // Populate the zone dropdown with new options
                        response.model.forEach(function (department) {
                            var option = document.createElement("option");
                            option.value = department.departmentName;
                            option.text = department.departmentName;
                            option.setAttribute("data-department-id", department.departmentID);
                            console.log("Department ID: ", department.departmentID);
                            DepartmentDropDown.appendChild(option);
                        });


                    } else {
                        alert('Failed to retrieve department: ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + error);
                }
            });
        }

        function updateDepartmentID() {
            var selectedOption = document.getElementById("department").selectedOptions[0];
            // Get the Zone_ID from the data attribute
            var departmentID = selectedOption.getAttribute("data-department-id"); // Fix the attribute name
            // Set the Zone_ID input field value
            document.getElementById("DepartmentID").value = departmentID;
        }
        function updateRole() {
            var selectedOption = document.getElementById("role").selectedOptions[0];

            // Get the value of the selected option
            var roleValue = selectedOption.value;  // or use selectedOption.text for the visible text

            // Set the value in the input field
            document.getElementById("roleName").value = roleValue;
        }


        function DepartmentDropDown2() {
            $.ajax({
                url: '/Department/AllDepartments',
                type: 'GET',
                success: function (response) {
                    console.log(response); // Log the response object

                    if (response.success) {
                        var DepartmentDropDown = document.getElementById("Department2");
                        DepartmentDropDown.innerHTML = ""; // Clear existing options
                        // Add a default "Select a Supervisor" option
                        var defaultOption = document.createElement("option");
                        defaultOption.value = "";
                        defaultOption.text = "Select a Department";
                        defaultOption.disabled = true;
                        defaultOption.selected = true;
                        DepartmentDropDown.appendChild(defaultOption);
                        // Populate the zone dropdown with new options
                        response.model.forEach(function (department) {
                            var option = document.createElement("option");
                            option.value = department.departmentName;
                            option.text = department.departmentName;
                            option.setAttribute("data-department-id", department.departmentID);
                            console.log("Department ID: ", department.departmentID);
                            DepartmentDropDown.appendChild(option);
                        });


                    } else {
                        alert('Failed to retrieve department: ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + error);
                }
            });
        }

        function updateDepartmentID2() {
            var selectedOption = document.getElementById("department2").selectedOptions[0];
            // Get the Zone_ID from the data attribute
            var departmentID = selectedOption.getAttribute("data-department-id"); // Fix the attribute name
            // Set the Zone_ID input field value
            document.getElementById("DepartmentID2").value = departmentID;
        }
        function updateRole2() {
            var selectedOption = document.getElementById("Role2").selectedOptions[0];

            // Get the value of the selected option
            var roleValue = selectedOption.value;  // or use selectedOption.text for the visible text

            // Set the value in the input field
            document.getElementById("roleName").value = roleValue;
        }
        function changeRole(){
            updateRole2();
            rolevalue = $("#roleName").val();
            $.ajax({
                url: '/Staff/StaffByRole',
                type: 'GET',
                data: {
                    role: rolevalue
                },
                success: function (response) {
                    console.log(response); // Log the response object

                    if (response.success) {
                        var DepartmentDropDown = document.getElementById("Staff");
                        DepartmentDropDown.innerHTML = ""; // Clear existing options
                        // Add a default "Select a Supervisor" option
                        var defaultOption = document.createElement("option");
                        defaultOption.value = "";
                        defaultOption.text = "Select a Staff";
                        defaultOption.disabled = true;
                        defaultOption.selected = true;
                        DepartmentDropDown.appendChild(defaultOption);
                        // Populate the zone dropdown with new options
                        response.model.staff.forEach(function (staff) {
                            var option = document.createElement("option");
                            option.value = staff.staffID;
                            option.text = staff.name;
                            option.setAttribute("data-staff-id", staff.departmentstaffId);
                            console.log("Staff ID: ", staff.departmentstaffId);
                            DepartmentDropDown.appendChild(option);
                        });


                    } else {
                        alert('Failed to retrieve staff: ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + error);
                }
            });
        }
       
    </script>

</body>
</html>
